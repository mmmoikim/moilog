(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{318:function(t,s,a){t.exports=a.p+"assets/img/objective-javascript.31e1b9c9.png"},359:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"객체지향-자바스크립트"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#객체지향-자바스크립트","aria-hidden":"true"}},[t._v("#")]),t._v(" 객체지향 자바스크립트")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("함수형, 객체지향, 프로시져는 중요하지 않다. 값을 기본으로 하냐 아니냐가 중요함")])]),t._v(" "),n("li",[n("p",[t._v("value context : 메모리 주소, 변수가 어디에 저장되는지 상관 없이 값이 같으면 같다라고 취급")])]),t._v(" "),n("li",[n("p",[t._v("identifier context : 같은 메모리 주소에 있으면 같다라고 취급, 메모리 주소가 다르면 값이 같아도 다르다라고 취급")])]),t._v(" "),n("li",[n("p",[t._v("객체지향을 사용한다는건 value context를 쓰면 안됨")])]),t._v(" "),n("li",[n("p",[t._v("함수형에서는 indentifier로 하면 안됨")])]),t._v(" "),n("li",[n("p",[t._v("하나의 컨텍스트만 써야 한다!! 두개의 컨텍스트가 섞여있으면 혼란해짐")])])]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false, identifier context")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringfity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringfity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true,  값 컨텍스트 (객체지향 깨먹음)")]),t._v("\n")])])]),n("ul",[n("li",[t._v("메소드 인자로 생 숫자로 받는게 아니라 new Count(3); 으로 객체로 만들어서 받아야 됨")])]),t._v(" "),n("h3",{attrs:{id:"value-대-identifier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#value-대-identifier","aria-hidden":"true"}},[t._v("#")]),t._v(" "),n("strong",[t._v("value 대 identifier")])]),t._v(" "),n("p",[t._v("value")]),t._v(" "),n("ol",[n("li",[t._v("끝없는 복사본 : 값을 사용하면 넘어 다니면서 끝없는 복사본이 만들어 짐")]),t._v(" "),n("li",[t._v("상태 변화에 안전 : 안전하긴 안전하지만 불변성으로 새로운 값이 만들어 져서 안전해 보일뿐 관리하려면 어려움")]),t._v(" "),n("li",[t._v("연산을 기반으로 로직을 전개 : 함수형 프로그래밍 , 연산을 통해 새로운 값을 토해내게 하는것, 수학적 프로그래밍은 복잡한 로직을 구현해 내기 어렵다. 어울리는 분야가 있음")])]),t._v(" "),n("p",[t._v("identifier")]),t._v(" "),n("ol",[n("li",[t._v("하나의 원본 : 값이 상태가 계속 변함, 상태가 일관성이 없다.")]),t._v(" "),n("li",[t._v("상태 변화를 내부에서 책임짐")]),t._v(" "),n("li",[t._v("메세지를 기반으로 로직을 전개 : 그 객체에서 다룰껀 다루고 나머진 메세지로 책임을 위임함.")])]),t._v(" "),n("p",[t._v("!! 객체지향은 값을 사용하지 않는다")]),t._v(" "),n("h3",{attrs:{id:"polymorphism-다형성"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#polymorphism-다형성","aria-hidden":"true"}},[t._v("#")]),t._v(" polymorphism 다형성")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"work"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Hardworker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("extends")]),t._v(" Worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hardwork"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HardWorker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worker "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nworker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hardwork")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 부모 worker에 print를 부르고 worker에 this.run을 부름")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this는 생성된 객체이기 때문에 this는 하드워커임!")]),t._v("\n")])])]),n("ul",[n("li",[t._v("대체가능성 : 자식은 부모를 대체 할 수 있다. 확장된 클래스는 대상클래스를 대체 할 수 있다.")]),t._v(" "),n("li",[t._v("내적이관성 : 어떠한 경우에도 태어났을 때의 원본 클래스를 유지하려는 속성")])]),t._v(" "),n("h3",{attrs:{id:"substitution-internal-identity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#substitution-internal-identity","aria-hidden":"true"}},[t._v("#")]),t._v(" substitution & internal identity")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("확장된 객체는 원본으로 대체 가능")])]),t._v(" "),n("li",[n("p",[t._v("생성 시점의 타입이 내부에 일관성 있게 참조됨")])]),t._v(" "),n("li",[n("p",[t._v("어떤 객체지향언어든 이 규칙을 따름! 하지만 언어마다 구현 방법이 다름")])])]),t._v(" "),n("h3",{attrs:{id:"polymorphism-of-prototype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#polymorphism-of-prototype","aria-hidden":"true"}},[t._v("#")]),t._v(" polymorphism of prototype")]),t._v(" "),n("p",[n("img",{attrs:{src:a(318),alt:"objective-javascript"}})]),t._v(" "),n("ul",[n("li",[t._v("hardwork 라는 함수나, 클래스를 만들면 prototype이 만들어 짐")]),t._v(" "),n("li",[t._v("worker라는 객체를 만들면 __proto __  가 만들어짐, 이건 hardwork에 prototype이랑 똑같은 애")]),t._v(" "),n("li",[t._v("hardwork도 객체이기 때문에 __proto __ 도 있고 constructor라는 속성이 있다. constructor는 자기 자신 클래스를 가르킴.")]),t._v(" "),n("li",[t._v("hardwork __proto __ 는 worker의 prototype을 가르킴")]),t._v(" "),n("li",[t._v("프로토타입 체인은 가장 가까이에 있는 자기 자신꺼 부터 먼저 찾고 없으면 체이닝 된 프로토 타고가서 부모에서찾는다. 이게 내적이관성을 가능케함")]),t._v(" "),n("li",[t._v("A(대상객체) instanceof B : 대상객체는 __proto __ 가 널이 될때까지 타고가서 비교함")])])])}],r=a(0),e=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);s.default=e.exports}}]);